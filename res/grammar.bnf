// statements
program       ::= declaration* EOF ;
declaration   ::= varDeclaration | statement ;
statement     ::= exprStatement | printStatement | ifStatement | block ;
ifStatement   ::= "if" "(" expression ")" statement ( "else" statement )?;
block         ::= "{" declaration* "}" ;
exprStatement ::= expression ";" ;
printStatement ::= "print" expression ";" ;
varDeclaration ::= "var" IDENTIFIER ( "=" expression )? ";" ;

// expressions
expression ::= assignment ;
assignment ::= IDENTIFIER "=" assignment | ternary
ternary    ::= equality "?" equality ":" equality ;
equality   ::= comparison ( ( "!=" | "==" ) comparison )* ;
comparison ::= term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term       ::= factor ( ( "-" | "+" ) factor )* ;
factor     ::= unary ( ( "/" | "*" ) unary )* ;
unary      ::= ( "!" | "-" ) unary
             | primary ;
primary    ::= NUMBER | STRING | "true" | "false" | "nil"
             | "(" expression ")" | IDENTIFIER ;